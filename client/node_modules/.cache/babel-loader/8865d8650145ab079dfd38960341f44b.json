{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lucac\\\\Documents\\\\keeperMERN\\\\client\\\\src\\\\components\\\\CreateArea.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport AddIcon from '@material-ui/icons/Add';\nimport Fab from '@material-ui/core/Fab';\nimport Zoom from '@material-ui/core/Zoom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateArea(props) {\n  _s();\n\n  //setting the note title and content\n  const [note, setNote] = useState({\n    title: '',\n    content: ''\n  }); //is active refers to what is displayed in the form\n\n  const [isActive, setIsActive] = useState(false); //handling change of inputs sets teh title and content to the value\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setNote(prevNote => {\n      return { ...prevNote,\n        [name]: value\n      };\n    });\n  } // values are saved as a note when add button is clicked\n\n\n  function submitNote(event) {\n    if (note.title === '') {\n      alert('title required');\n    } else {\n      props.onAdd(note);\n      setNote({\n        title: '',\n        content: ''\n      });\n      event.preventDefault();\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"create-note\",\n      children: [isActive && /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        onChange: handleChange,\n        value: note.title,\n        placeholder: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"content\",\n        onClick: () => {\n          setIsActive(true);\n        },\n        onChange: handleChange,\n        value: note.content,\n        placeholder: \"Take a note...\",\n        rows: isActive ? 3 : 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Zoom, {\n        in: isActive,\n        children: /*#__PURE__*/_jsxDEV(Fab, {\n          onClick: submitNote,\n          children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 3\n  }, this);\n}\n\n_s(CreateArea, \"JUEIK7XRG5Kmjog7myvwh+UE4YE=\");\n\n_c = CreateArea;\nexport default CreateArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateArea\");","map":{"version":3,"sources":["C:/Users/lucac/Documents/keeperMERN/client/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","note","setNote","title","content","isActive","setIsActive","handleChange","event","name","value","target","prevNote","submitNote","alert","onAdd","preventDefault"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;;;AAEA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AAC1B;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC;AAChCQ,IAAAA,KAAK,EAAE,EADyB;AAEhCC,IAAAA,OAAO,EAAE;AAFuB,GAAD,CAAhC,CAF0B,CAM1B;;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,KAAD,CAAxC,CAP0B,CAS1B;;AACA,WAASY,YAAT,CAAsBC,KAAtB,EAA6B;AAC5B,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,KAAK,CAACG,MAA9B;AAEAT,IAAAA,OAAO,CAAEU,QAAD,IAAc;AACrB,aAAO,EACN,GAAGA,QADG;AAEN,SAACH,IAAD,GAAQC;AAFF,OAAP;AAIA,KALM,CAAP;AAMA,GAnByB,CAqB1B;;;AACA,WAASG,UAAT,CAAoBL,KAApB,EAA2B;AAC1B,QAAIP,IAAI,CAACE,KAAL,KAAe,EAAnB,EAAuB;AACtBW,MAAAA,KAAK,CAAC,gBAAD,CAAL;AACA,KAFD,MAEO;AACNd,MAAAA,KAAK,CAACe,KAAN,CAAYd,IAAZ;AAEAC,MAAAA,OAAO,CAAC;AACPC,QAAAA,KAAK,EAAE,EADA;AAEPC,QAAAA,OAAO,EAAE;AAFF,OAAD,CAAP;AAIAI,MAAAA,KAAK,CAACQ,cAAN;AACA;AAGD;;AAED,sBACC;AAAA,2BACC;AAAM,MAAA,SAAS,EAAC,aAAhB;AAAA,iBAEEX,QAAQ,iBACR;AACC,QAAA,IAAI,EAAC,OADN;AAEC,QAAA,QAAQ,EAAEE,YAFX;AAGC,QAAA,KAAK,EAAEN,IAAI,CAACE,KAHb;AAIC,QAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA,cAHF,eAWC;AACC,QAAA,IAAI,EAAC,SADN;AAEC,QAAA,OAAO,EAAE,MAAM;AACdG,UAAAA,WAAW,CAAC,IAAD,CAAX;AACA,SAJF;AAKC,QAAA,QAAQ,EAAEC,YALX;AAMC,QAAA,KAAK,EAAEN,IAAI,CAACG,OANb;AAOC,QAAA,WAAW,EAAC,gBAPb;AAQC,QAAA,IAAI,EAAEC,QAAQ,GAAG,CAAH,GAAO;AARtB;AAAA;AAAA;AAAA;AAAA,cAXD,eAuBC,QAAC,IAAD;AAAM,QAAA,EAAE,EAAEA,QAAV;AAAA,+BACC,QAAC,GAAD;AAAK,UAAA,OAAO,EAAEQ,UAAd;AAAA,iCACC,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cAvBD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADD;AAiCA;;GAvEQd,U;;KAAAA,U;AAyET,eAAeA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\t//setting the note title and content\r\n\tconst [note, setNote] = useState({\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t});\r\n\t//is active refers to what is displayed in the form\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\r\n\t//handling change of inputs sets teh title and content to the value\r\n\tfunction handleChange(event) {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetNote((prevNote) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevNote,\r\n\t\t\t\t[name]: value,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\t// values are saved as a note when add button is clicked\r\n\tfunction submitNote(event) {\r\n\t\tif (note.title === '') {\r\n\t\t\talert('title required')\r\n\t\t} else {\r\n\t\t\tprops.onAdd(note);\r\n\t\t\r\n\t\t\tsetNote({\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tcontent: '',\r\n\t\t\t});\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className=\"create-note\">\r\n\t\t\t\t{/* if the textarea is clicked then isActive set to true and the fields will be rendered */}\r\n\t\t\t\t{isActive && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvalue={note.title}\r\n\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIsActive(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={note.content}\r\n\t\t\t\t\tplaceholder=\"Take a note...\"\r\n\t\t\t\t\trows={isActive ? 3 : 1}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* uses pre-made components to render the button  */}\r\n\r\n\t\t\t\t<Zoom in={isActive}>\r\n\t\t\t\t\t<Fab onClick={submitNote}>\r\n\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t</Fab>\r\n\t\t\t\t</Zoom>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}