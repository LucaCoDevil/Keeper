{"ast":null,"code":"import _defineProperty from\"C:/Users/lucac/Documents/keeperMERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"C:/Users/lucac/Documents/keeperMERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"C:/Users/lucac/Documents/keeperMERN/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import AddIcon from'@material-ui/icons/Add';import Fab from'@material-ui/core/Fab';import Zoom from'@material-ui/core/Zoom';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function CreateArea(props){//setting the note title and content\nvar _useState=useState({title:'',content:''}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setNote=_useState2[1];//is active refers to what is displayed in the form\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isActive=_useState4[0],setIsActive=_useState4[1];//handling change of inputs sets teh title and content to the value\nfunction handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setNote(function(prevNote){return _objectSpread(_objectSpread({},prevNote),{},_defineProperty({},name,value));});}// values are saved as a note when add button is clicked\nfunction submitNote(event){if(note.title===''){alert('title required');}else{props.onAdd(note);setNote({title:'',content:''});event.preventDefault();}}return/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"form\",{className:\"create-note\",children:[isActive&&/*#__PURE__*/_jsx(\"input\",{name:\"title\",onChange:handleChange,value:note.title,placeholder:\"Title\"}),/*#__PURE__*/_jsx(\"textarea\",{name:\"content\",onClick:function onClick(){setIsActive(true);},onChange:handleChange,value:note.content,placeholder:\"Take a note...\",rows:isActive?3:1}),/*#__PURE__*/_jsx(Zoom,{in:isActive,children:/*#__PURE__*/_jsx(Fab,{onClick:submitNote,children:/*#__PURE__*/_jsx(AddIcon,{})})})]})});}export default CreateArea;","map":{"version":3,"sources":["C:/Users/lucac/Documents/keeperMERN/client/src/components/CreateArea.jsx"],"names":["React","useState","AddIcon","Fab","Zoom","CreateArea","props","title","content","note","setNote","isActive","setIsActive","handleChange","event","target","name","value","prevNote","submitNote","alert","onAdd","preventDefault"],"mappings":"oeAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,wBAApB,CACA,MAAOC,CAAAA,GAAP,KAAgB,uBAAhB,CACA,MAAOC,CAAAA,IAAP,KAAiB,wBAAjB,C,wFAEA,QAASC,CAAAA,UAAT,CAAoBC,KAApB,CAA2B,CAC1B;AAD0B,cAEFL,QAAQ,CAAC,CAChCM,KAAK,CAAE,EADyB,CAEhCC,OAAO,CAAE,EAFuB,CAAD,CAFN,wCAEnBC,IAFmB,eAEbC,OAFa,eAM1B;AAN0B,eAOMT,QAAQ,CAAC,KAAD,CAPd,yCAOnBU,QAPmB,eAOTC,WAPS,eAS1B;AACA,QAASC,CAAAA,YAAT,CAAsBC,KAAtB,CAA6B,mBACJA,KAAK,CAACC,MADF,CACpBC,IADoB,eACpBA,IADoB,CACdC,KADc,eACdA,KADc,CAG5BP,OAAO,CAAC,SAACQ,QAAD,CAAc,CACrB,sCACIA,QADJ,wBAEEF,IAFF,CAESC,KAFT,GAIA,CALM,CAAP,CAMA,CAED;AACA,QAASE,CAAAA,UAAT,CAAoBL,KAApB,CAA2B,CAC1B,GAAIL,IAAI,CAACF,KAAL,GAAe,EAAnB,CAAuB,CACtBa,KAAK,CAAC,gBAAD,CAAL,CACA,CAFD,IAEO,CACNd,KAAK,CAACe,KAAN,CAAYZ,IAAZ,EAEAC,OAAO,CAAC,CACPH,KAAK,CAAE,EADA,CAEPC,OAAO,CAAE,EAFF,CAAD,CAAP,CAIAM,KAAK,CAACQ,cAAN,GACA,CAGD,CAED,mBACC,kCACC,cAAM,SAAS,CAAC,aAAhB,WAEEX,QAAQ,eACR,cACC,IAAI,CAAC,OADN,CAEC,QAAQ,CAAEE,YAFX,CAGC,KAAK,CAAEJ,IAAI,CAACF,KAHb,CAIC,WAAW,CAAC,OAJb,EAHF,cAWC,iBACC,IAAI,CAAC,SADN,CAEC,OAAO,CAAE,kBAAM,CACdK,WAAW,CAAC,IAAD,CAAX,CACA,CAJF,CAKC,QAAQ,CAAEC,YALX,CAMC,KAAK,CAAEJ,IAAI,CAACD,OANb,CAOC,WAAW,CAAC,gBAPb,CAQC,IAAI,CAAEG,QAAQ,CAAG,CAAH,CAAO,CARtB,EAXD,cAuBC,KAAC,IAAD,EAAM,EAAE,CAAEA,QAAV,uBACC,KAAC,GAAD,EAAK,OAAO,CAAEQ,UAAd,uBACC,KAAC,OAAD,IADD,EADD,EAvBD,GADD,EADD,CAiCA,CAED,cAAed,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Zoom from '@material-ui/core/Zoom';\r\n\r\nfunction CreateArea(props) {\r\n\t//setting the note title and content\r\n\tconst [note, setNote] = useState({\r\n\t\ttitle: '',\r\n\t\tcontent: '',\r\n\t});\r\n\t//is active refers to what is displayed in the form\r\n\tconst [isActive, setIsActive] = useState(false);\r\n\r\n\t//handling change of inputs sets teh title and content to the value\r\n\tfunction handleChange(event) {\r\n\t\tconst { name, value } = event.target;\r\n\r\n\t\tsetNote((prevNote) => {\r\n\t\t\treturn {\r\n\t\t\t\t...prevNote,\r\n\t\t\t\t[name]: value,\r\n\t\t\t};\r\n\t\t});\r\n\t}\r\n\r\n\t// values are saved as a note when add button is clicked\r\n\tfunction submitNote(event) {\r\n\t\tif (note.title === '') {\r\n\t\t\talert('title required')\r\n\t\t} else {\r\n\t\t\tprops.onAdd(note);\r\n\t\t\r\n\t\t\tsetNote({\r\n\t\t\t\ttitle: '',\r\n\t\t\t\tcontent: '',\r\n\t\t\t});\r\n\t\t\tevent.preventDefault();\r\n\t\t}\r\n\t\t\r\n\t\t\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<form className=\"create-note\">\r\n\t\t\t\t{/* if the textarea is clicked then isActive set to true and the fields will be rendered */}\r\n\t\t\t\t{isActive && (\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\tvalue={note.title}\r\n\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\r\n\t\t\t\t<textarea\r\n\t\t\t\t\tname=\"content\"\r\n\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\tsetIsActive(true);\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\tvalue={note.content}\r\n\t\t\t\t\tplaceholder=\"Take a note...\"\r\n\t\t\t\t\trows={isActive ? 3 : 1}\r\n\t\t\t\t/>\r\n\t\t\t\t{/* uses pre-made components to render the button  */}\r\n\r\n\t\t\t\t<Zoom in={isActive}>\r\n\t\t\t\t\t<Fab onClick={submitNote}>\r\n\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t</Fab>\r\n\t\t\t\t</Zoom>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CreateArea;\r\n"]},"metadata":{},"sourceType":"module"}